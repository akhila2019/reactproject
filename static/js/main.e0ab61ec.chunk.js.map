{"version":3,"sources":["Module.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["tryConvert","value","convert","temp","input","console","log","Number","isNaN","ceilNumber","convertFtoC","convertRtoC","val","parseFloat","Math","ceil","toString","Calculator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputUnit","studentInput","studentInputUnit","correction","onChange","bind","assertThisInitialized","onSubmit","onKeyPress","e","preventDefault","setState","defineProperty","target","name","studentRecord","inputSplitArray","split","length","unit","a","b","Unit","trim","toLowerCase","inputTemp","result1","result2","abs","react_default","createElement","class","type","placeholder","React","Component","App","Calculator_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0ab61ec.chunk.js","sourcesContent":["\n  export function tryConvert(value, convert) {\n    const input = value;\n    console.log(\"inside tryconvert\"+  convert)\n    console.log(\"inside tryconvert\"+  input)\n    if (Number.isNaN(input)) {\n      return 'Invalid';\n    }\n    if (convert ==='K'){\n        const output=  convertKtoC(input)\n        return ceilNumber(output)\n    }else if(convert === 'F'){\n        const output= convertFtoC(input)\n        return ceilNumber(output)\n    }else if (convert === 'R'){\n       const output= convertRtoC(input)\n       return ceilNumber(output)\n    }else \n      return value\n    /*const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();*/\n  }\n  /*function  roundNumber(val){\n    const rounded = parseFloat(Math.round(val)).toFixed(2);\n    return rounded.toString();\n  }*/\n\n  function  ceilNumber(val){\n    const rounded = parseFloat(Math.ceil(val));\n    return rounded.toString();\n  }\n\n\n  function convertKtoC(temp){\n   temp = temp - 273.15\n   console.log(\"convertKtoC\" + temp)\n   return temp\n  }\n\n  export function difference(a, b) {\n    return Math.abs(a - b);\n  }\n\n  function convertFtoC(temp){\n\n    temp = (temp - 32)  / 9.0 * 5.0\n    console.log(\"convertFtoC\" + temp)\n    return temp\n  }\n\n  function convertRtoC(temp){\n\n    temp = (temp - 491.67) * 5.0/9.0\n    console.log(\"convertRtoC\" + temp)\n    return temp\n  }\n\n  export function mapUnit(unit){\n    if(unit.trim().toLowerCase() === 'celsius'){\n        return 'C'\n    }else if(unit.trim().toLowerCase() === 'kelvin'){\n        return 'K'\n    }else if (unit.trim().toLowerCase() === 'fahrenheit'){\n        return 'F'\n    }else if (unit.trim().toLowerCase() === 'rankine'){\n        return 'R'\n    }else \n        return 'Invalid'\n    \n\n  }\n\n\n\n  \n\n\n  ","import React from 'react';\n import {tryConvert, mapUnit, difference} from './Module'\n \n  \n export default class Calculator extends React.Component {\n    constructor(props) {\n      super();\n      this.state ={\n        input : \"\",\n        inputUnit : \"\",\n        studentInput : \"\",\n        studentInputUnit : \"\",\n        correction : \"\"\n      }\n      this.onChange =this.onChange.bind(this);\n      this.onSubmit =this.onSubmit.bind(this);\n      this.onKeyPress = this.onKeyPress.bind(this);\n    }\n    onKey\n\n    onChange(e){\n\n        e.preventDefault();\n           this.setState(\n             {\n               [e.target.name] : e.target.value\n             }\n           )\n         }\n         onKeyPress(e){\n             console.log(\"Inside onKeyPress\")\n            this.setState({correction : \" \"})\n\n         }\n  \n         onSubmit(e){\n            e.preventDefault();\n            const studentRecord = {\n                input : this.state.input,\n                \n                studentInput :this.state.studentInput,\n                studentInputUnit : this.state.studentInputUnit\n            }\n            console.log(studentRecord)          \n            const inputSplitArray = studentRecord.input.split(\" \")\n            console.log( inputSplitArray[0]);\n            console.log( inputSplitArray[1]);\n            console.log(\"length of the array \"+ inputSplitArray.length)\n            let Unit = mapUnit( inputSplitArray[1] )\n            console.log(\"Unit\"+ Unit)\n            console.log(Number.isNaN( inputSplitArray[0]))\n            if(inputSplitArray.length  !==2 ||Number.isNaN( inputSplitArray[0])){\n              this.setState({correction : \"Invalid\"})\n            }else if (Number.isNaN(studentRecord.studentInputUnit)){\n              this.setState({correction : \"Incorrect\"})\n            }else if(Unit ==='Invalid'){\n              this.setState({correction : \"Invalid\"})\n            }else{\n            studentRecord.inputTemp= inputSplitArray[0]\n                  \n            const result1  =  tryConvert(studentRecord.inputTemp, Unit)\n            console.log(\"result1 \"+ result1 )\n            console.log(\"ceil result1 \"+ Math.ceil(result1) )\n            const result2=   tryConvert(studentRecord.studentInput, studentRecord.studentInputUnit)\n            console.log(\"result2 \"+ result2 )\n            console.log(\"ceil result2 \"+ Math.ceil(result2) )\n            if(difference(result1,result2) <=2){\n              this.setState({correction : \"Correct\"})\n            }else{\n              this.setState({correction : \"InCorrect\"})\n            }\n          }\n          }\n  \n    render() {\n     \n  \n      return (\n        <div class=\"scienceProject\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-8 m-auto\">\n                   \n                    <h4 class=\"display-6 text-center mx-auto\"> Temperature Unit-conversion Worksheets Evaluator </h4>\n                    <form onSubmit={this.onSubmit}>\n                      <div class=\"form-group\">\n                          <input type=\"text\" class=\"form-control form-control-lg\" name=\"input\" placeholder=\"Input For temperature\" value = {this.state.input} \n                          onChange={this.onChange} onKeyPress={this.onKeyPress}/>\n                      </div>\n                      {/*<div class=\"form-group\">\n                          <select class=\"form-control form-control-lg\" placeholder=\"Input temperature Unit\" name=\"inputUnit\" value = {this.state.inputUnit} onChange={this.onChange} onKeyPress={this.onKeyPress}>\n                              <option value=\"\">Select Unit</option>\n                              <option value=\"K\">Kelvin</option>\n                              <option value=\"C\">Celsius</option>\n                              <option value=\"F\">Fahrenheit</option>\n                              <option value=\"R\">Rankine</option>\n                          </select>\n                       </div>*/}\n                      <div class=\"form-group\">\n                          <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Student Input\" name=\"studentInput\" value = {this.state.studentInput} onChange={this.onChange} onKeyPress={this.onKeyPress}/>\n                      </div>\n                      <div class=\"form-group\">\n                          <select class=\"form-control form-control-lg\" placeholder=\"Student temperature Unit\" name=\"studentInputUnit\" value = {this.state.studentInputUnit} onChange={this.onChange} onKeyPress={this.onKeyPress}> \n                              <option value=\"\">Select Unit</option>\n                              <option value=\"K\">Kelvin</option>\n                              <option value=\"C\">Celsius</option>\n                              <option value=\"F\">Fahrenheit</option>\n                              <option value=\"R\">Rankine</option>\n                          </select>\n                      </div>\n                      \n                      <input type=\"submit\" class=\"btn btn-primary btn-block mt-4\"  />\n                  </form>\n                  \n                    <div class=\"align-middle\">\n                      <p  class=\"font-weight-bold display-8 text-center\">{this.state.correction} </p>\n                    </div>\n                  \n                </div>\n            </div>\n        </div>\n    </div>\n      );\n    }\n  }\n  \n","import React, { Component } from 'react';\nimport Calculator from './Calculator';\nimport  \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <Calculator/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}